{
  "$id": "https://raw.githubusercontent.com/climpr/climpr-schemas/main/schemas/v1.0.0/bicep-deployment/deploymentconfig.json#",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Deployment configuration for Climpr Bicep deployments",
  "properties": {
    "type": {
      "$ref": "#/$defs/common/type"
    },
    "scope": {
      "$ref": "#/$defs/common/scope"
    }
  },
  "oneOf": [
    {
      "$comment": "Bicep deployment",
      "if": {
        "properties": {
          "type": {
            "const": "deployment"
          }
        }
      },
      "then": {
        "oneOf": [
          {
            "$comment": "Bicep deployment - Resource Group scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "resourceGroup"
                }
              }
            },
            "then": {
              "description": "The schema for Bicep deployments scoped to a Resource Group",
              "type": "object",
              "required": [
                "resourceGroupName"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "deployment"
                },
                "scope": {
                  "const": "resourceGroup"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/deployment/name"
                },
                "resourceGroupName": {
                  "$ref": "#/$defs/deployment/resourceGroupName"
                }
              }
            },
            "else": false
          },
          {
            "$comment": "Bicep deployment - Subscription scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "subscription"
                }
              }
            },
            "then": {
              "description": "The schema for Bicep deployments scoped to a Subscription",
              "type": "object",
              "required": [],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "deployment"
                },
                "scope": {
                  "const": "subscription"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/deployment/name"
                },
                "location": {
                  "$ref": "#/$defs/deployment/location"
                }
              }
            },
            "else": false
          },
          {
            "$comment": "Bicep deployment - Management Group scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "managementGroup"
                }
              }
            },
            "then": {
              "description": "The schema for Bicep deployments scoped to a Management Group",
              "type": "object",
              "required": [
                "managementGroupId"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "deployment"
                },
                "scope": {
                  "const": "managementGroup"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/deployment/name"
                },
                "location": {
                  "$ref": "#/$defs/deployment/location"
                },
                "managementGroupId": {
                  "$ref": "#/$defs/deployment/managementGroupId"
                }
              }
            },
            "else": false
          },
          {
            "$comment": "Bicep deployment - Tenant scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "tenant"
                }
              }
            },
            "then": {
              "description": "The schema for Bicep deployments scoped to a Tenant",
              "type": "object",
              "required": [
                "scope"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "deployment"
                },
                "scope": {
                  "const": "tenant"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/deployment/name"
                },
                "location": {
                  "$ref": "#/$defs/deployment/location"
                }
              }
            },
            "else": false
          }
        ]
      },
      "else": false
    },
    {
      "$comment": "Deployment Stack",
      "if": {
        "properties": {
          "type": {
            "const": "stack"
          }
        }
      },
      "then": {
        "required": [
          "type"
        ],
        "oneOf": [
          {
            "$comment": "Deployment Stack - Resource Group scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "resourceGroup"
                }
              }
            },
            "then": {
              "description": "The schema for Deployment Stacks scoped to a Resource Group",
              "type": "object",
              "required": [
                "name",
                "resourceGroupName",
                "actionOnUnmanage",
                "denySettingsMode"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "stack"
                },
                "scope": {
                  "const": "resourceGroup"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/stack/name"
                },
                "resourceGroupName": {
                  "$ref": "#/$defs/stack/resourceGroupName"
                },
                "actionOnUnmanage": {
                  "$ref": "#/$defs/stack/actionOnUnmanage"
                },
                "denySettingsMode": {
                  "$ref": "#/$defs/stack/denySettingsMode"
                },
                "bypassStackOutOfSyncError": {
                  "$ref": "#/$defs/stack/bypassStackOutOfSyncError"
                },
                "denySettingsApplyToChildScopes": {
                  "$ref": "#/$defs/stack/denySettingsApplyToChildScopes"
                },
                "denySettingsExcludedActions": {
                  "$ref": "#/$defs/stack/denySettingsExcludedActions"
                },
                "denySettingsExcludedPrincipals": {
                  "$ref": "#/$defs/stack/denySettingsExcludedPrincipals"
                },
                "description": {
                  "$ref": "#/$defs/stack/description"
                },
                "tags": {
                  "$ref": "#/$defs/stack/tags"
                }
              }
            },
            "else": false
          },
          {
            "$comment": "Deployment Stack - Subscription scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "subscription"
                }
              }
            },
            "then": {
              "description": "The schema for Deployment Stacks scoped to a Subscription",
              "type": "object",
              "required": [
                "name",
                "actionOnUnmanage",
                "denySettingsMode"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "stack"
                },
                "scope": {
                  "const": "subscription"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/stack/name"
                },
                "actionOnUnmanage": {
                  "$ref": "#/$defs/stack/actionOnUnmanage"
                },
                "denySettingsMode": {
                  "$ref": "#/$defs/stack/denySettingsMode"
                },
                "bypassStackOutOfSyncError": {
                  "$ref": "#/$defs/stack/bypassStackOutOfSyncError"
                },
                "denySettingsApplyToChildScopes": {
                  "$ref": "#/$defs/stack/denySettingsApplyToChildScopes"
                },
                "denySettingsExcludedActions": {
                  "$ref": "#/$defs/stack/denySettingsExcludedActions"
                },
                "denySettingsExcludedPrincipals": {
                  "$ref": "#/$defs/stack/denySettingsExcludedPrincipals"
                },
                "deploymentResourceGroup": {
                  "$ref": "#/$defs/stack/deploymentResourceGroup"
                },
                "description": {
                  "$ref": "#/$defs/stack/description"
                },
                "location": {
                  "$ref": "#/$defs/stack/location"
                },
                "tags": {
                  "$ref": "#/$defs/stack/tags"
                }
              }
            },
            "else": false
          },
          {
            "$comment": "Deployment Stack - Management Group scope",
            "if": {
              "properties": {
                "scope": {
                  "const": "managementGroup"
                }
              }
            },
            "then": {
              "description": "The schema for Deployment Stacks scoped to a Management Group",
              "type": "object",
              "required": [
                "name",
                "managementGroupId",
                "actionOnUnmanage",
                "denySettingsMode"
              ],
              "additionalProperties": false,
              "properties": {
                "type": {
                  "const": "stack"
                },
                "scope": {
                  "const": "managementGroup"
                },
                "$schema": {
                  "$ref": "#/$defs/common/$schema"
                },
                "disabled": {
                  "$ref": "#/$defs/common/disabled"
                },
                "triggers": {
                  "$ref": "#/$defs/common/triggers"
                },
                "azureCliVersion": {
                  "$ref": "#/$defs/common/azureCliVersion"
                },
                "name": {
                  "$ref": "#/$defs/stack/name"
                },
                "managementGroupId": {
                  "$ref": "#/$defs/stack/managementGroupId"
                },
                "actionOnUnmanage": {
                  "$ref": "#/$defs/stack/actionOnUnmanage"
                },
                "denySettingsMode": {
                  "$ref": "#/$defs/stack/denySettingsMode"
                },
                "bypassStackOutOfSyncError": {
                  "$ref": "#/$defs/stack/bypassStackOutOfSyncError"
                },
                "denySettingsApplyToChildScopes": {
                  "$ref": "#/$defs/stack/denySettingsApplyToChildScopes"
                },
                "denySettingsExcludedActions": {
                  "$ref": "#/$defs/stack/denySettingsExcludedActions"
                },
                "denySettingsExcludedPrincipals": {
                  "$ref": "#/$defs/stack/denySettingsExcludedPrincipals"
                },
                "deploymentSubscription": {
                  "$ref": "#/$defs/stack/deploymentSubscription"
                },
                "description": {
                  "$ref": "#/$defs/stack/description"
                },
                "location": {
                  "$ref": "#/$defs/stack/location"
                },
                "tags": {
                  "$ref": "#/$defs/stack/tags"
                }
              }
            },
            "else": false
          }
        ]
      },
      "else": false
    }
  ],
  "$defs": {
    "common": {
      "$schema": {
        "type": "string",
        "format": "uri-reference"
      },
      "type": {
        "type": "string",
        "enum": [
          "deployment",
          "stack"
        ],
        "default": "deployment"
      },
      "scope": {
        "type": "string",
        "enum": [
          "resourceGroup",
          "subscription",
          "managementGroup",
          "tenant"
        ],
        "default": "subscription"
      },
      "disabled": {
        "type": "boolean",
        "description": "Setting this to true disables the deployment regardless of the triggering event."
      },
      "triggers": {
        "type": "object",
        "propertyNames": {
          "enum": [
            "workflow_dispatch",
            "schedule",
            "pull_request_target",
            "push"
          ]
        },
        "additionalProperties": false,
        "patternProperties": {
          ".*": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "disabled": {
                "type": "boolean",
                "description": "Setting this to true disables the deployment when triggered from this specific triggering event."
              }
            }
          }
        }
      },
      "azureCliVersion": {
        "type": "string",
        "format": "regex",
        "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      }
    },
    "deployment": {
      "name": {
        "type": "string",
        "description": "The deployment name."
      },
      "location": {
        "type": "string",
        "description": "The location to store the deployment metadata. This is optional and will use an organization default if not specified.",
        "minLength": 1
      },
      "resourceGroupName": {
        "type": "string",
        "description": "Name of resource group.",
        "minLength": 1,
        "maxLength": 90
      },
      "managementGroupId": {
        "type": "string",
        "description": "The management group id.",
        "minLength": 1,
        "maxLength": 90
      }
    },
    "stack": {
      "name": {
        "type": "string",
        "description": "The name of the deployment stack."
      },
      "location": {
        "type": "string",
        "description": "The location to store deployment stack. This is optional and will use an organization default if not specified.",
        "minLength": 1
      },
      "resourceGroupName": {
        "type": "string",
        "description": "The resource group where the deployment stack will be created.",
        "minLength": 1,
        "maxLength": 90
      },
      "managementGroupId": {
        "type": "string",
        "description": "The management group id to create stack at.",
        "minLength": 1,
        "maxLength": 90
      },
      "deploymentResourceGroup": {
        "type": "string",
        "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack."
      },
      "deploymentSubscription": {
        "type": "string",
        "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack."
      },
      "actionOnUnmanage": {
        "type": "string",
        "description": "Defines what happens to resources that are no longer managed after the stack is updated or deleted.",
        "enum": [
          "deleteAll",
          "deleteResources",
          "detachAll"
        ]
      },
      "bypassStackOutOfSyncError": {
        "type": "boolean",
        "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized. Default 'false'.",
        "default": false
      },
      "denySettingsMode": {
        "type": "string",
        "description": "Define which operations are denied on resources managed by the stack.",
        "enum": [
          "denyDelete",
          "denyWriteAndDelete",
          "none"
        ]
      },
      "denySettingsApplyToChildScopes": {
        "type": "boolean",
        "description": "DenySettings will be applied to child scopes. Default: 'false'.",
        "default": false
      },
      "denySettingsExcludedActions": {
        "type": "array",
        "description": "List of role-based management operations that are excluded from the denySettings. Up to 200 actions are permitted.",
        "maxLength": 200,
        "items": {
          "type": "string"
        }
      },
      "denySettingsExcludedPrincipals": {
        "type": "array",
        "description": "List of AAD principal IDs excluded from the lock. Up to 5 principals are permitted.",
        "maxLength": 5,
        "items": {
          "type": "string"
        }
      },
      "description": {
        "type": "string",
        "description": "The description of deployment stack."
      },
      "tags": {
        "type": "object",
        "description": "Tags to apply to the stack. Key=value format."
      }
    }
  }
}